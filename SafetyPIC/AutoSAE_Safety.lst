;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 10/07/2015 1:50:08 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2991      	GOTO       401
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x1683      	BSF        STATUS, 5
0x0008	0x00CF      	MOVWF      ___saveSTATUS
0x0009	0x080A      	MOVF       PCLATH, 0
0x000A	0x00CE      	MOVWF      ___savePCLATH
0x000B	0x018A      	CLRF       PCLATH
0x000C	0x0870      	MOVF       R0, 0
0x000D	0x1283      	BCF        STATUS, 5
0x000E	0x00A0      	MOVWF      32
;AutoSAE_Safety.c,69 :: 		void interrupt() {
;AutoSAE_Safety.c,71 :: 		if(hb_interruptcount > 50) {
0x000F	0x3080      	MOVLW      128
0x0010	0x00F0      	MOVWF      R0
0x0011	0x3080      	MOVLW      128
0x0012	0x0623      	XORWF      _hb_interruptcount+1, 0
0x0013	0x0270      	SUBWF      R0, 0
0x0014	0x1D03      	BTFSS      STATUS, 2
0x0015	0x2818      	GOTO       L__interrupt94
0x0016	0x0822      	MOVF       _hb_interruptcount, 0
0x0017	0x3C32      	SUBLW      50
L__interrupt94:
0x0018	0x1803      	BTFSC      STATUS, 0
0x0019	0x2832      	GOTO       L_interrupt3
;AutoSAE_Safety.c,72 :: 		if((arm_state > 0) && (brakeil == 1)) {
0x001A	0x3080      	MOVLW      128
0x001B	0x3A00      	XORLW      0
0x001C	0x00F0      	MOVWF      R0
0x001D	0x3080      	MOVLW      128
0x001E	0x1683      	BSF        STATUS, 5
0x001F	0x0644      	XORWF      _arm_state, 0
0x0020	0x0270      	SUBWF      R0, 0
0x0021	0x1803      	BTFSC      STATUS, 0
0x0022	0x282E      	GOTO       L_interrupt6
0x0023	0x1283      	BCF        STATUS, 5
0x0024	0x086F      	MOVF       _brakeil, 0
0x0025	0x3A01      	XORLW      1
0x0026	0x1D03      	BTFSS      STATUS, 2
0x0027	0x282E      	GOTO       L_interrupt6
L__interrupt84:
;AutoSAE_Safety.c,73 :: 		hb_trip = 1;    // HB LED constant on
0x0028	0x3001      	MOVLW      1
0x0029	0x00EE      	MOVWF      _hb_trip
;AutoSAE_Safety.c,74 :: 		tripreq = 1;
0x002A	0x3001      	MOVLW      1
0x002B	0x1683      	BSF        STATUS, 5
0x002C	0x00C3      	MOVWF      _tripreq
;AutoSAE_Safety.c,75 :: 		}
0x002D	0x2831      	GOTO       L_interrupt7
L_interrupt6:
;AutoSAE_Safety.c,76 :: 		else { hb_interruptcount = 0; }
0x002E	0x1283      	BCF        STATUS, 5
0x002F	0x01A2      	CLRF       _hb_interruptcount
0x0030	0x01A3      	CLRF       _hb_interruptcount+1
L_interrupt7:
;AutoSAE_Safety.c,77 :: 		}
0x0031	0x2836      	GOTO       L_interrupt8
L_interrupt3:
0x0032	0x1283      	BCF        STATUS, 5
;AutoSAE_Safety.c,78 :: 		else { hb_interruptcount++; }
0x0033	0x0AA2      	INCF       _hb_interruptcount, 1
0x0034	0x1903      	BTFSC      STATUS, 2
0x0035	0x0AA3      	INCF       _hb_interruptcount+1, 1
L_interrupt8:
;AutoSAE_Safety.c,80 :: 		if(arm_state == 1) {
0x0036	0x1683      	BSF        STATUS, 5
0x0037	0x0844      	MOVF       _arm_state, 0
0x0038	0x3A01      	XORLW      1
0x0039	0x1D03      	BTFSS      STATUS, 2
0x003A	0x2850      	GOTO       L_interrupt9
;AutoSAE_Safety.c,81 :: 		if(arm_interruptcount > 200) { arm_state = 2; }
0x003B	0x3080      	MOVLW      128
0x003C	0x00F0      	MOVWF      R0
0x003D	0x3080      	MOVLW      128
0x003E	0x1283      	BCF        STATUS, 5
0x003F	0x066D      	XORWF      _arm_interruptcount+1, 0
0x0040	0x0270      	SUBWF      R0, 0
0x0041	0x1D03      	BTFSS      STATUS, 2
0x0042	0x2845      	GOTO       L__interrupt95
0x0043	0x086C      	MOVF       _arm_interruptcount, 0
0x0044	0x3CC8      	SUBLW      200
L__interrupt95:
0x0045	0x1803      	BTFSC      STATUS, 0
0x0046	0x284B      	GOTO       L_interrupt10
0x0047	0x3002      	MOVLW      2
0x0048	0x1683      	BSF        STATUS, 5
0x0049	0x00C4      	MOVWF      _arm_state
0x004A	0x284F      	GOTO       L_interrupt11
L_interrupt10:
;AutoSAE_Safety.c,82 :: 		else { arm_interruptcount++; }
0x004B	0x1283      	BCF        STATUS, 5
0x004C	0x0AEC      	INCF       _arm_interruptcount, 1
0x004D	0x1903      	BTFSC      STATUS, 2
0x004E	0x0AED      	INCF       _arm_interruptcount+1, 1
L_interrupt11:
;AutoSAE_Safety.c,83 :: 		}
0x004F	0x28AC      	GOTO       L_interrupt12
L_interrupt9:
;AutoSAE_Safety.c,84 :: 		else if(arm_state == 3) {
0x0050	0x1683      	BSF        STATUS, 5
0x0051	0x0844      	MOVF       _arm_state, 0
0x0052	0x3A03      	XORLW      3
0x0053	0x1D03      	BTFSS      STATUS, 2
0x0054	0x286A      	GOTO       L_interrupt13
;AutoSAE_Safety.c,85 :: 		if(arm_interruptcount > 200) { arm_state = 4; }
0x0055	0x3080      	MOVLW      128
0x0056	0x00F0      	MOVWF      R0
0x0057	0x3080      	MOVLW      128
0x0058	0x1283      	BCF        STATUS, 5
0x0059	0x066D      	XORWF      _arm_interruptcount+1, 0
0x005A	0x0270      	SUBWF      R0, 0
0x005B	0x1D03      	BTFSS      STATUS, 2
0x005C	0x285F      	GOTO       L__interrupt96
0x005D	0x086C      	MOVF       _arm_interruptcount, 0
0x005E	0x3CC8      	SUBLW      200
L__interrupt96:
0x005F	0x1803      	BTFSC      STATUS, 0
0x0060	0x2865      	GOTO       L_interrupt14
0x0061	0x3004      	MOVLW      4
0x0062	0x1683      	BSF        STATUS, 5
0x0063	0x00C4      	MOVWF      _arm_state
0x0064	0x2869      	GOTO       L_interrupt15
L_interrupt14:
;AutoSAE_Safety.c,86 :: 		else { arm_interruptcount++; }
0x0065	0x1283      	BCF        STATUS, 5
0x0066	0x0AEC      	INCF       _arm_interruptcount, 1
0x0067	0x1903      	BTFSC      STATUS, 2
0x0068	0x0AED      	INCF       _arm_interruptcount+1, 1
L_interrupt15:
;AutoSAE_Safety.c,87 :: 		}
0x0069	0x28AC      	GOTO       L_interrupt16
L_interrupt13:
;AutoSAE_Safety.c,88 :: 		else if(arm_state == 5) {
0x006A	0x1683      	BSF        STATUS, 5
0x006B	0x0844      	MOVF       _arm_state, 0
0x006C	0x3A05      	XORLW      5
0x006D	0x1D03      	BTFSS      STATUS, 2
0x006E	0x2885      	GOTO       L_interrupt17
;AutoSAE_Safety.c,89 :: 		if(arm_interruptcount > 500) { arm_state = 6; }
0x006F	0x3080      	MOVLW      128
0x0070	0x3A01      	XORLW      1
0x0071	0x00F0      	MOVWF      R0
0x0072	0x3080      	MOVLW      128
0x0073	0x1283      	BCF        STATUS, 5
0x0074	0x066D      	XORWF      _arm_interruptcount+1, 0
0x0075	0x0270      	SUBWF      R0, 0
0x0076	0x1D03      	BTFSS      STATUS, 2
0x0077	0x287A      	GOTO       L__interrupt97
0x0078	0x086C      	MOVF       _arm_interruptcount, 0
0x0079	0x3CF4      	SUBLW      244
L__interrupt97:
0x007A	0x1803      	BTFSC      STATUS, 0
0x007B	0x2880      	GOTO       L_interrupt18
0x007C	0x3006      	MOVLW      6
0x007D	0x1683      	BSF        STATUS, 5
0x007E	0x00C4      	MOVWF      _arm_state
0x007F	0x2884      	GOTO       L_interrupt19
L_interrupt18:
;AutoSAE_Safety.c,90 :: 		else { arm_interruptcount++; }
0x0080	0x1283      	BCF        STATUS, 5
0x0081	0x0AEC      	INCF       _arm_interruptcount, 1
0x0082	0x1903      	BTFSC      STATUS, 2
0x0083	0x0AED      	INCF       _arm_interruptcount+1, 1
L_interrupt19:
;AutoSAE_Safety.c,91 :: 		}
0x0084	0x28AC      	GOTO       L_interrupt20
L_interrupt17:
;AutoSAE_Safety.c,92 :: 		else if(arm_state == 7) {
0x0085	0x1683      	BSF        STATUS, 5
0x0086	0x0844      	MOVF       _arm_state, 0
0x0087	0x3A07      	XORLW      7
0x0088	0x1D03      	BTFSS      STATUS, 2
0x0089	0x289F      	GOTO       L_interrupt21
;AutoSAE_Safety.c,93 :: 		if(arm_interruptcount > 100) { arm_state = 8; }
0x008A	0x3080      	MOVLW      128
0x008B	0x00F0      	MOVWF      R0
0x008C	0x3080      	MOVLW      128
0x008D	0x1283      	BCF        STATUS, 5
0x008E	0x066D      	XORWF      _arm_interruptcount+1, 0
0x008F	0x0270      	SUBWF      R0, 0
0x0090	0x1D03      	BTFSS      STATUS, 2
0x0091	0x2894      	GOTO       L__interrupt98
0x0092	0x086C      	MOVF       _arm_interruptcount, 0
0x0093	0x3C64      	SUBLW      100
L__interrupt98:
0x0094	0x1803      	BTFSC      STATUS, 0
0x0095	0x289A      	GOTO       L_interrupt22
0x0096	0x3008      	MOVLW      8
0x0097	0x1683      	BSF        STATUS, 5
0x0098	0x00C4      	MOVWF      _arm_state
0x0099	0x289E      	GOTO       L_interrupt23
L_interrupt22:
;AutoSAE_Safety.c,94 :: 		else { arm_interruptcount++; }
0x009A	0x1283      	BCF        STATUS, 5
0x009B	0x0AEC      	INCF       _arm_interruptcount, 1
0x009C	0x1903      	BTFSC      STATUS, 2
0x009D	0x0AED      	INCF       _arm_interruptcount+1, 1
L_interrupt23:
;AutoSAE_Safety.c,95 :: 		}
0x009E	0x28AC      	GOTO       L_interrupt24
L_interrupt21:
;AutoSAE_Safety.c,96 :: 		else if(arm_state == 9 || arm_state == 0) { arm_interruptcount = 0; }
0x009F	0x1683      	BSF        STATUS, 5
0x00A0	0x0844      	MOVF       _arm_state, 0
0x00A1	0x3A09      	XORLW      9
0x00A2	0x1903      	BTFSC      STATUS, 2
0x00A3	0x28A9      	GOTO       L__interrupt83
0x00A4	0x0844      	MOVF       _arm_state, 0
0x00A5	0x3A00      	XORLW      0
0x00A6	0x1903      	BTFSC      STATUS, 2
0x00A7	0x28A9      	GOTO       L__interrupt83
0x00A8	0x28AC      	GOTO       L_interrupt27
L__interrupt83:
0x00A9	0x1283      	BCF        STATUS, 5
0x00AA	0x01EC      	CLRF       _arm_interruptcount
0x00AB	0x01ED      	CLRF       _arm_interruptcount+1
L_interrupt27:
L_interrupt24:
L_interrupt20:
L_interrupt16:
L_interrupt12:
0x00AC	0x1283      	BCF        STATUS, 5
;AutoSAE_Safety.c,98 :: 		if(alarm_counter > 0) { alarm_counter--; }
0x00AD	0x3080      	MOVLW      128
0x00AE	0x00F0      	MOVWF      R0
0x00AF	0x3080      	MOVLW      128
0x00B0	0x062D      	XORWF      _alarm_counter+1, 0
0x00B1	0x0270      	SUBWF      R0, 0
0x00B2	0x1D03      	BTFSS      STATUS, 2
0x00B3	0x28B6      	GOTO       L__interrupt99
0x00B4	0x082C      	MOVF       _alarm_counter, 0
0x00B5	0x3C00      	SUBLW      0
L__interrupt99:
0x00B6	0x1803      	BTFSC      STATUS, 0
0x00B7	0x28BC      	GOTO       L_interrupt28
0x00B8	0x3001      	MOVLW      1
0x00B9	0x02AC      	SUBWF      _alarm_counter, 1
0x00BA	0x1C03      	BTFSS      STATUS, 0
0x00BB	0x03AD      	DECF       _alarm_counter+1, 1
L_interrupt28:
;AutoSAE_Safety.c,100 :: 		TMR0 = 100;
0x00BC	0x3064      	MOVLW      100
0x00BD	0x0081      	MOVWF      TMR0
;AutoSAE_Safety.c,101 :: 		INTCON.TMR0IF = 0;
0x00BE	0x110B      	BCF        INTCON, 2
;AutoSAE_Safety.c,102 :: 		}
L_end_interrupt:
L__interrupt93:
0x00BF	0x0820      	MOVF       32, 0
0x00C0	0x00F0      	MOVWF      R0
0x00C1	0x1683      	BSF        STATUS, 5
0x00C2	0x084E      	MOVF       ___savePCLATH, 0
0x00C3	0x008A      	MOVWF      PCLATH
0x00C4	0x0E4F      	SWAPF      ___saveSTATUS, 0
0x00C5	0x0083      	MOVWF      STATUS
0x00C6	0x0EFF      	SWAPF      R15, 1
0x00C7	0x0E7F      	SWAPF      R15, 0
0x00C8	0x0009      	RETFIE
; end of _interrupt
_UART1_Write:
;__Lib_UART_b52.c,38 :: 		
;__Lib_UART_b52.c,39 :: 		
L_UART1_Write3:
0x00C9	0x1683      	BSF        STATUS, 5
0x00CA	0x1303      	BCF        STATUS, 6
0x00CB	0x1898      	BTFSC      TXSTA, 1
0x00CC	0x28CF      	GOTO       L_UART1_Write4
;__Lib_UART_b52.c,40 :: 		
0x00CD	0x0000      	NOP
0x00CE	0x28C9      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_b52.c,41 :: 		
0x00CF	0x0859      	MOVF       FARG_UART1_Write_data_, 0
0x00D0	0x1283      	BCF        STATUS, 5
0x00D1	0x0099      	MOVWF      TXREG
;__Lib_UART_b52.c,42 :: 		
L_end_UART1_Write:
0x00D2	0x0008      	RETURN
; end of _UART1_Write
_Delay_500us:
;__Lib_Delays.c,27 :: 		void Delay_500us() {
;__Lib_Delays.c,28 :: 		Delay_us(498);
0x00D3	0x3002      	MOVLW      2
0x00D4	0x1283      	BCF        STATUS, 5
0x00D5	0x1303      	BCF        STATUS, 6
0x00D6	0x00FC      	MOVWF      R12
0x00D7	0x3049      	MOVLW      73
0x00D8	0x00FD      	MOVWF      R13
L_Delay_500us4:
0x00D9	0x0BFD      	DECFSZ     R13, 1
0x00DA	0x28D9      	GOTO       L_Delay_500us4
0x00DB	0x0BFC      	DECFSZ     R12, 1
0x00DC	0x28D9      	GOTO       L_Delay_500us4
0x00DD	0x0000      	NOP
0x00DE	0x0000      	NOP
;__Lib_Delays.c,29 :: 		}
L_end_Delay_500us:
0x00DF	0x0008      	RETURN
; end of _Delay_500us
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x00E0	0x1683      	BSF        STATUS, 5
0x00E1	0x1303      	BCF        STATUS, 6
0x00E2	0x084D      	MOVF       ___DoICPAddr+1, 0
0x00E3	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x00E4	0x084C      	MOVF       ___DoICPAddr, 0
0x00E5	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x00E6	0x0008      	RETURN
; end of _____DoICP
_UART1_Write_Text:
;__Lib_UART_b52.c,46 :: 		
;__Lib_UART_b52.c,47 :: 		
0x00E7	0x1683      	BSF        STATUS, 5
0x00E8	0x1303      	BCF        STATUS, 6
0x00E9	0x01D8      	CLRF       UART1_Write_Text_counter_L0
;__Lib_UART_b52.c,49 :: 		
0x00EA	0x0856      	MOVF       FARG_UART1_Write_Text_uart_text, 0
0x00EB	0x0084      	MOVWF      FSR
0x00EC	0x0800      	MOVF       INDF, 0
0x00ED	0x00D7      	MOVWF      UART1_Write_Text_data__L0
;__Lib_UART_b52.c,50 :: 		
L_UART1_Write_Text5:
0x00EE	0x0857      	MOVF       UART1_Write_Text_data__L0, 0
0x00EF	0x3A00      	XORLW      0
0x00F0	0x1903      	BTFSC      STATUS, 2
0x00F1	0x28FD      	GOTO       L_UART1_Write_Text6
;__Lib_UART_b52.c,51 :: 		
0x00F2	0x0857      	MOVF       UART1_Write_Text_data__L0, 0
0x00F3	0x00D9      	MOVWF      FARG_UART1_Write_data_
0x00F4	0x20C9      	CALL       _UART1_Write
;__Lib_UART_b52.c,52 :: 		
0x00F5	0x1683      	BSF        STATUS, 5
0x00F6	0x0AD8      	INCF       UART1_Write_Text_counter_L0, 1
;__Lib_UART_b52.c,53 :: 		
0x00F7	0x0858      	MOVF       UART1_Write_Text_counter_L0, 0
0x00F8	0x0756      	ADDWF      FARG_UART1_Write_Text_uart_text, 0
0x00F9	0x0084      	MOVWF      FSR
0x00FA	0x0800      	MOVF       INDF, 0
0x00FB	0x00D7      	MOVWF      UART1_Write_Text_data__L0
;__Lib_UART_b52.c,54 :: 		
0x00FC	0x28EE      	GOTO       L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_b52.c,55 :: 		
L_end_UART1_Write_Text:
0x00FD	0x0008      	RETURN
; end of _UART1_Write_Text
_trip:
;AutoSAE_Safety.c,26 :: 		void trip() {
;AutoSAE_Safety.c,28 :: 		tripstate = 1;
0x00FE	0x3001      	MOVLW      1
0x00FF	0x1683      	BSF        STATUS, 5
0x0100	0x1303      	BCF        STATUS, 6
0x0101	0x00BA      	MOVWF      _tripstate
;AutoSAE_Safety.c,30 :: 		PORTB.B6 = 0;    // Open trip circuit
0x0102	0x1283      	BCF        STATUS, 5
0x0103	0x1306      	BCF        PORTB, 6
;AutoSAE_Safety.c,31 :: 		PORTA.B4 = 1;    // E-stop LED on
0x0104	0x1605      	BSF        PORTA, 4
;AutoSAE_Safety.c,32 :: 		PORTA.B0 = 1;    // Alarm on
0x0105	0x1405      	BSF        PORTA, 0
;AutoSAE_Safety.c,33 :: 		if(brakeil == 1) { PORTA.B1 = 0; }     // Activate brake interlock
0x0106	0x086F      	MOVF       _brakeil, 0
0x0107	0x3A01      	XORLW      1
0x0108	0x1D03      	BTFSS      STATUS, 2
0x0109	0x290B      	GOTO       L_trip0
0x010A	0x1085      	BCF        PORTA, 1
L_trip0:
;AutoSAE_Safety.c,35 :: 		if(hb_trip == 1) { PORTA.B3 = 1; }
0x010B	0x086E      	MOVF       _hb_trip, 0
0x010C	0x3A01      	XORLW      1
0x010D	0x1D03      	BTFSS      STATUS, 2
0x010E	0x2911      	GOTO       L_trip1
0x010F	0x1585      	BSF        PORTA, 3
0x0110	0x2912      	GOTO       L_trip2
L_trip1:
;AutoSAE_Safety.c,36 :: 		else { PORTA.B3 = 0; }
0x0111	0x1185      	BCF        PORTA, 3
L_trip2:
;AutoSAE_Safety.c,38 :: 		UART1_Write_Text("TRIP\n");
0x0112	0x30C5      	MOVLW      ?lstr1_AutoSAE_Safety
0x0113	0x1683      	BSF        STATUS, 5
0x0114	0x00D6      	MOVWF      FARG_UART1_Write_Text_uart_text
0x0115	0x20E7      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,40 :: 		arm_state = -1;
0x0116	0x30FF      	MOVLW      255
0x0117	0x00C4      	MOVWF      _arm_state
;AutoSAE_Safety.c,41 :: 		tripreq = 0;
0x0118	0x01C3      	CLRF       _tripreq
;AutoSAE_Safety.c,43 :: 		}
L_end_trip:
0x0119	0x0008      	RETURN
; end of _trip
_untrip:
;AutoSAE_Safety.c,48 :: 		void untrip() {
;AutoSAE_Safety.c,50 :: 		tripstate = 0;
0x011A	0x1683      	BSF        STATUS, 5
0x011B	0x1303      	BCF        STATUS, 6
0x011C	0x01BA      	CLRF       _tripstate
;AutoSAE_Safety.c,52 :: 		PORTB.B6 = 1;    // Close trip circuit
0x011D	0x1283      	BCF        STATUS, 5
0x011E	0x1706      	BSF        PORTB, 6
;AutoSAE_Safety.c,53 :: 		PORTA.B4 = 0;    // E-stop LED off
0x011F	0x1205      	BCF        PORTA, 4
;AutoSAE_Safety.c,54 :: 		PORTA.B0 = 0;    // Alarm off
0x0120	0x1005      	BCF        PORTA, 0
;AutoSAE_Safety.c,55 :: 		PORTA.B1 = 1;     // Deactivate brake interlock
0x0121	0x1485      	BSF        PORTA, 1
;AutoSAE_Safety.c,56 :: 		PORTA.B3 = 0;    // Deactivate hb trip led
0x0122	0x1185      	BCF        PORTA, 3
;AutoSAE_Safety.c,58 :: 		UART1_Write_Text("Untrip\n");
0x0123	0x30BB      	MOVLW      ?lstr2_AutoSAE_Safety
0x0124	0x1683      	BSF        STATUS, 5
0x0125	0x00D6      	MOVWF      FARG_UART1_Write_Text_uart_text
0x0126	0x20E7      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,60 :: 		arm_state = 0;
0x0127	0x01C4      	CLRF       _arm_state
;AutoSAE_Safety.c,62 :: 		}
L_end_untrip:
0x0128	0x0008      	RETURN
; end of _untrip
_UART1_Data_Ready:
;__Lib_UART_b52.c,16 :: 		
;__Lib_UART_b52.c,17 :: 		
0x0129	0x3000      	MOVLW      0
0x012A	0x1283      	BCF        STATUS, 5
0x012B	0x1303      	BCF        STATUS, 6
0x012C	0x1A8C      	BTFSC      PIR1, 5
0x012D	0x3001      	MOVLW      1
0x012E	0x00F0      	MOVWF      R0
;__Lib_UART_b52.c,18 :: 		
L_end_UART1_Data_Ready:
0x012F	0x0008      	RETURN
; end of _UART1_Data_Ready
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0130	0x20E0      	CALL       _____DoICP
0x0131	0x118A      	BCF        PCLATH, 3
0x0132	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0133	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0134	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0135	0x0ACC      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0136	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0137	0x0ACD      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0138	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0139	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x013A	0x2930      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x013B	0x0008      	RETURN
; end of ___CC2DW
_Button:
;__Lib_Button.c,6 :: 		
;__Lib_Button.c,8 :: 		
0x013C	0x1683      	BSF        STATUS, 5
0x013D	0x1303      	BCF        STATUS, 6
0x013E	0x01D5      	CLRF       Button_rslt_L0
;__Lib_Button.c,11 :: 		
0x013F	0x0851      	MOVF       FARG_Button_pin, 0
0x0140	0x00F1      	MOVWF      R1
0x0141	0x3001      	MOVLW      1
0x0142	0x00F0      	MOVWF      R0
0x0143	0x0871      	MOVF       R1, 0
L__Button5:
0x0144	0x1903      	BTFSC      STATUS, 2
0x0145	0x294A      	GOTO       L__Button6
0x0146	0x0DF0      	RLF        R0, 1
0x0147	0x1070      	BCF        R0, 0
0x0148	0x3EFF      	ADDLW      255
0x0149	0x2944      	GOTO       L__Button5
L__Button6:
0x014A	0x0870      	MOVF       R0, 0
0x014B	0x00D4      	MOVWF      Button_pMask_L0
;__Lib_Button.c,13 :: 		
0x014C	0x0850      	MOVF       FARG_Button_port, 0
0x014D	0x0084      	MOVWF      FSR
0x014E	0x0870      	MOVF       R0, 0
0x014F	0x0500      	ANDWF      INDF, 0
0x0150	0x00F1      	MOVWF      R1
0x0151	0x0871      	MOVF       R1, 0
0x0152	0x3001      	MOVLW      1
0x0153	0x1D03      	BTFSS      STATUS, 2
0x0154	0x3000      	MOVLW      0
0x0155	0x00F0      	MOVWF      R0
0x0156	0x0853      	MOVF       FARG_Button_active_state, 0
0x0157	0x06F0      	XORWF      R0, 1
0x0158	0x1903      	BTFSC      STATUS, 2
0x0159	0x2973      	GOTO       L_Button0
;__Lib_Button.c,15 :: 		
L_Button1:
0x015A	0x0852      	MOVF       FARG_Button_time_ms, 0
0x015B	0x3C00      	SUBLW      0
0x015C	0x1803      	BTFSC      STATUS, 0
0x015D	0x2963      	GOTO       L_Button2
;__Lib_Button.c,16 :: 		
0x015E	0x20D3      	CALL       _Delay_500us
;__Lib_Button.c,17 :: 		
0x015F	0x20D3      	CALL       _Delay_500us
;__Lib_Button.c,18 :: 		
0x0160	0x1683      	BSF        STATUS, 5
0x0161	0x03D2      	DECF       FARG_Button_time_ms, 1
;__Lib_Button.c,19 :: 		
0x0162	0x295A      	GOTO       L_Button1
L_Button2:
;__Lib_Button.c,21 :: 		
0x0163	0x0850      	MOVF       FARG_Button_port, 0
0x0164	0x0084      	MOVWF      FSR
0x0165	0x0854      	MOVF       Button_pMask_L0, 0
0x0166	0x0500      	ANDWF      INDF, 0
0x0167	0x00F1      	MOVWF      R1
0x0168	0x0871      	MOVF       R1, 0
0x0169	0x3001      	MOVLW      1
0x016A	0x1D03      	BTFSS      STATUS, 2
0x016B	0x3000      	MOVLW      0
0x016C	0x00F0      	MOVWF      R0
0x016D	0x0853      	MOVF       FARG_Button_active_state, 0
0x016E	0x06F0      	XORWF      R0, 1
0x016F	0x1903      	BTFSC      STATUS, 2
0x0170	0x2973      	GOTO       L_Button3
;__Lib_Button.c,22 :: 		
0x0171	0x30FF      	MOVLW      255
0x0172	0x00D5      	MOVWF      Button_rslt_L0
L_Button3:
;__Lib_Button.c,23 :: 		
L_Button0:
;__Lib_Button.c,25 :: 		
0x0173	0x0855      	MOVF       Button_rslt_L0, 0
0x0174	0x00F0      	MOVWF      R0
;__Lib_Button.c,26 :: 		
L_end_Button:
0x0175	0x0008      	RETURN
; end of _Button
_UART1_Read:
;__Lib_UART_b52.c,21 :: 		
;__Lib_UART_b52.c,24 :: 		
0x0176	0x1283      	BCF        STATUS, 5
0x0177	0x1303      	BCF        STATUS, 6
0x0178	0x081A      	MOVF       RCREG, 0
0x0179	0x00F1      	MOVWF      R1
;__Lib_UART_b52.c,25 :: 		
0x017A	0x1C98      	BTFSS      RCSTA, 1
0x017B	0x297E      	GOTO       L_UART1_Read2
;__Lib_UART_b52.c,26 :: 		
0x017C	0x1218      	BCF        RCSTA, 4
;__Lib_UART_b52.c,27 :: 		
0x017D	0x1618      	BSF        RCSTA, 4
;__Lib_UART_b52.c,28 :: 		
L_UART1_Read2:
;__Lib_UART_b52.c,29 :: 		
0x017E	0x0871      	MOVF       R1, 0
0x017F	0x00F0      	MOVWF      R0
;__Lib_UART_b52.c,30 :: 		
L_end_UART1_Read:
0x0180	0x0008      	RETURN
; end of _UART1_Read
_UART1_Init:
;__Lib_UART_b52.c,2 :: 		
;__Lib_UART_b52.c,5 :: 		
0x0181	0x1683      	BSF        STATUS, 5
0x0182	0x1303      	BCF        STATUS, 6
0x0183	0x1698      	BSF        TXSTA, 5
;__Lib_UART_b52.c,6 :: 		
0x0184	0x3090      	MOVLW      144
0x0185	0x1283      	BCF        STATUS, 5
0x0186	0x0098      	MOVWF      RCSTA
;__Lib_UART_b52.c,7 :: 		
0x0187	0x1683      	BSF        STATUS, 5
0x0188	0x1506      	BSF        TRISB2_bit, BitPos(TRISB2_bit+0)
;__Lib_UART_b52.c,8 :: 		
0x0189	0x1286      	BCF        TRISB5_bit, BitPos(TRISB5_bit+0)
;__Lib_UART_b52.c,10 :: 		
L_UART1_Init0:
0x018A	0x1283      	BCF        STATUS, 5
0x018B	0x1E8C      	BTFSS      PIR1, 5
0x018C	0x2990      	GOTO       L_UART1_Init1
;__Lib_UART_b52.c,11 :: 		
0x018D	0x081A      	MOVF       RCREG, 0
0x018E	0x00F0      	MOVWF      R0
0x018F	0x298A      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_b52.c,12 :: 		
L_end_UART1_Init:
0x0190	0x0008      	RETURN
; end of _UART1_Init
_main:
0x0191	0x23CE      	CALL       974
;AutoSAE_Safety.c,108 :: 		void main() {
;AutoSAE_Safety.c,110 :: 		OSCCON = 0b1111110;    // Set up internal oscillator.
0x0192	0x307E      	MOVLW      126
0x0193	0x1683      	BSF        STATUS, 5
0x0194	0x1303      	BCF        STATUS, 6
0x0195	0x008F      	MOVWF      OSCCON
;AutoSAE_Safety.c,112 :: 		WDTCON.WDTPS0 = 0;
0x0196	0x1283      	BCF        STATUS, 5
0x0197	0x1703      	BSF        STATUS, 6
0x0198	0x1085      	BCF        WDTCON, 1
;AutoSAE_Safety.c,113 :: 		WDTCON.WDTPS1 = 0;
0x0199	0x1105      	BCF        WDTCON, 2
;AutoSAE_Safety.c,114 :: 		WDTCON.WDTPS2 = 0;
0x019A	0x1185      	BCF        WDTCON, 3
;AutoSAE_Safety.c,115 :: 		WDTCON.WDTPS3 = 1;
0x019B	0x1605      	BSF        WDTCON, 4
;AutoSAE_Safety.c,117 :: 		UART1_Init(38400);       // Init hardware UART
0x019C	0x300C      	MOVLW      12
0x019D	0x1683      	BSF        STATUS, 5
0x019E	0x1303      	BCF        STATUS, 6
0x019F	0x0099      	MOVWF      SPBRG
0x01A0	0x1518      	BSF        TXSTA, 2
0x01A1	0x2181      	CALL       _UART1_Init
;AutoSAE_Safety.c,118 :: 		Delay_ms(500);
0x01A2	0x3006      	MOVLW      6
0x01A3	0x00FB      	MOVWF      R11
0x01A4	0x3013      	MOVLW      19
0x01A5	0x00FC      	MOVWF      R12
0x01A6	0x30AD      	MOVLW      173
0x01A7	0x00FD      	MOVWF      R13
L_main29:
0x01A8	0x0BFD      	DECFSZ     R13, 1
0x01A9	0x29A8      	GOTO       L_main29
0x01AA	0x0BFC      	DECFSZ     R12, 1
0x01AB	0x29A8      	GOTO       L_main29
0x01AC	0x0BFB      	DECFSZ     R11, 1
0x01AD	0x29A8      	GOTO       L_main29
0x01AE	0x0000      	NOP
0x01AF	0x0000      	NOP
;AutoSAE_Safety.c,120 :: 		UART1_Write_Text("Hi\n");
0x01B0	0x302E      	MOVLW      ?lstr3_AutoSAE_Safety
0x01B1	0x1683      	BSF        STATUS, 5
0x01B2	0x00D6      	MOVWF      FARG_UART1_Write_Text_uart_text
0x01B3	0x20E7      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,122 :: 		ANSEL  = 0;            // Set PortA pins to digital.
0x01B4	0x019B      	CLRF       ANSEL
;AutoSAE_Safety.c,123 :: 		CMCON = 0x07;
0x01B5	0x3007      	MOVLW      7
0x01B6	0x009C      	MOVWF      CMCON
;AutoSAE_Safety.c,126 :: 		TRISA = 0b11100100;
0x01B7	0x30E4      	MOVLW      228
0x01B8	0x0085      	MOVWF      TRISA
;AutoSAE_Safety.c,127 :: 		TRISB = 0b10111100;
0x01B9	0x30BC      	MOVLW      188
0x01BA	0x0086      	MOVWF      TRISB
;AutoSAE_Safety.c,130 :: 		PORTA = 0b00000010;          // Brake IL line is high by default.
0x01BB	0x3002      	MOVLW      2
0x01BC	0x1283      	BCF        STATUS, 5
0x01BD	0x0085      	MOVWF      PORTA
;AutoSAE_Safety.c,131 :: 		PORTB = 0;
0x01BE	0x0186      	CLRF       PORTB
;AutoSAE_Safety.c,134 :: 		INTCON.TMR0IE = 1;
0x01BF	0x168B      	BSF        INTCON, 5
;AutoSAE_Safety.c,135 :: 		INTCON.TMR0IF = 0;
0x01C0	0x110B      	BCF        INTCON, 2
;AutoSAE_Safety.c,136 :: 		OPTION_REG.T0CS = 0;  // bit 5  TMR0 Clock Source Select bit...0 = Internal Clock
0x01C1	0x1683      	BSF        STATUS, 5
0x01C2	0x1281      	BCF        OPTION_REG, 5
;AutoSAE_Safety.c,137 :: 		OPTION_REG.T0SE = 0;  // bit 4 TMR0 Source Edge Select bit 0 = low/high
0x01C3	0x1201      	BCF        OPTION_REG, 4
;AutoSAE_Safety.c,138 :: 		OPTION_REG.PSA = 0;   // bit 3  Prescaler Assignment bit...0 = Prescaler is assigned to the Timer0
0x01C4	0x1181      	BCF        OPTION_REG, 3
;AutoSAE_Safety.c,139 :: 		OPTION_REG.PS2 = 1;   // bits 2-0  PS2:PS0: Prescaler Rate Select bits
0x01C5	0x1501      	BSF        OPTION_REG, 2
;AutoSAE_Safety.c,140 :: 		OPTION_REG.PS1 = 1;
0x01C6	0x1481      	BSF        OPTION_REG, 1
;AutoSAE_Safety.c,141 :: 		OPTION_REG.PS0 = 1;
0x01C7	0x1401      	BSF        OPTION_REG, 0
;AutoSAE_Safety.c,142 :: 		OPTION_REG.NOT_RBPU = 0;
0x01C8	0x1381      	BCF        OPTION_REG, 7
;AutoSAE_Safety.c,143 :: 		TMR0 = 100;             // preset for timer register
0x01C9	0x3064      	MOVLW      100
0x01CA	0x1283      	BCF        STATUS, 5
0x01CB	0x0081      	MOVWF      TMR0
;AutoSAE_Safety.c,145 :: 		INTCON.GIE = 1;
0x01CC	0x178B      	BSF        INTCON, 7
;AutoSAE_Safety.c,148 :: 		UART1_Write_Text("Init ok\n");
0x01CD	0x3034      	MOVLW      ?lstr4_AutoSAE_Safety
0x01CE	0x1683      	BSF        STATUS, 5
0x01CF	0x00D6      	MOVWF      FARG_UART1_Write_Text_uart_text
0x01D0	0x20E7      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,151 :: 		while(1) {
L_main30:
0x01D1	0x1683      	BSF        STATUS, 5
;AutoSAE_Safety.c,153 :: 		if(tripreq == 1) { trip(); }
0x01D2	0x0843      	MOVF       _tripreq, 0
0x01D3	0x3A01      	XORLW      1
0x01D4	0x1D03      	BTFSS      STATUS, 2
0x01D5	0x29D7      	GOTO       L_main32
0x01D6	0x20FE      	CALL       _trip
L_main32:
;AutoSAE_Safety.c,155 :: 		asm { CLRWDT; } // Reset watchdog timer
0x01D7	0x0064      	CLRWDT
;AutoSAE_Safety.c,164 :: 		hb_bypass_button_state = PORTB.B7;
0x01D8	0x3000      	MOVLW      0
0x01D9	0x1283      	BCF        STATUS, 5
0x01DA	0x1B86      	BTFSC      PORTB, 7
0x01DB	0x3001      	MOVLW      1
0x01DC	0x00B3      	MOVWF      _hb_bypass_button_state
;AutoSAE_Safety.c,166 :: 		if(hb_bypass_button_state != hb_bypass_prev_state) {
0x01DD	0x0833      	MOVF       _hb_bypass_button_state, 0
0x01DE	0x0632      	XORWF      _hb_bypass_prev_state, 0
0x01DF	0x1903      	BTFSC      STATUS, 2
0x01E0	0x29EB      	GOTO       L_main33
;AutoSAE_Safety.c,168 :: 		hb_interruptcount = 0;//Reset the timer
0x01E1	0x01A2      	CLRF       _hb_interruptcount
0x01E2	0x01A3      	CLRF       _hb_interruptcount+1
;AutoSAE_Safety.c,169 :: 		if(hb_bypass_button_state == 1) {
0x01E3	0x0833      	MOVF       _hb_bypass_button_state, 0
0x01E4	0x3A01      	XORLW      1
0x01E5	0x1D03      	BTFSS      STATUS, 2
0x01E6	0x29EA      	GOTO       L_main34
;AutoSAE_Safety.c,170 :: 		hbstate = 1;
0x01E7	0x3001      	MOVLW      1
0x01E8	0x00A1      	MOVWF      _hbstate
;AutoSAE_Safety.c,171 :: 		} else {
0x01E9	0x29EB      	GOTO       L_main35
L_main34:
;AutoSAE_Safety.c,172 :: 		hbstate = 0;
0x01EA	0x01A1      	CLRF       _hbstate
;AutoSAE_Safety.c,173 :: 		}
L_main35:
;AutoSAE_Safety.c,174 :: 		}
L_main33:
;AutoSAE_Safety.c,175 :: 		hb_bypass_prev_state = hb_bypass_button_state;
0x01EB	0x0833      	MOVF       _hb_bypass_button_state, 0
0x01EC	0x00B2      	MOVWF      _hb_bypass_prev_state
;AutoSAE_Safety.c,177 :: 		if (UART1_Data_Ready()) {                // Receive serial data.
0x01ED	0x2129      	CALL       _UART1_Data_Ready
0x01EE	0x0870      	MOVF       R0, 0
0x01EF	0x1903      	BTFSC      STATUS, 2
0x01F0	0x2A45      	GOTO       L_main36
;AutoSAE_Safety.c,178 :: 		uart_rd = UART1_Read();
0x01F1	0x2176      	CALL       _UART1_Read
0x01F2	0x0870      	MOVF       R0, 0
0x01F3	0x1683      	BSF        STATUS, 5
0x01F4	0x00CB      	MOVWF      _uart_rd
;AutoSAE_Safety.c,180 :: 		if(uart_rd == 'E' && tripstate == 0) { trip(); }
0x01F5	0x0870      	MOVF       R0, 0
0x01F6	0x3A45      	XORLW      69
0x01F7	0x1D03      	BTFSS      STATUS, 2
0x01F8	0x29FE      	GOTO       L_main39
0x01F9	0x083A      	MOVF       _tripstate, 0
0x01FA	0x3A00      	XORLW      0
0x01FB	0x1D03      	BTFSS      STATUS, 2
0x01FC	0x29FE      	GOTO       L_main39
L__main89:
0x01FD	0x20FE      	CALL       _trip
L_main39:
;AutoSAE_Safety.c,181 :: 		if(uart_rd == 'R' && tripstate == 1) { untrip(); }
0x01FE	0x084B      	MOVF       _uart_rd, 0
0x01FF	0x3A52      	XORLW      82
0x0200	0x1D03      	BTFSS      STATUS, 2
0x0201	0x2A07      	GOTO       L_main42
0x0202	0x083A      	MOVF       _tripstate, 0
0x0203	0x3A01      	XORLW      1
0x0204	0x1D03      	BTFSS      STATUS, 2
0x0205	0x2A07      	GOTO       L_main42
L__main88:
0x0206	0x211A      	CALL       _untrip
L_main42:
;AutoSAE_Safety.c,183 :: 		oldhbstate = hbstate;
0x0207	0x1283      	BCF        STATUS, 5
0x0208	0x0821      	MOVF       _hbstate, 0
0x0209	0x00A4      	MOVWF      _oldhbstate
;AutoSAE_Safety.c,185 :: 		if(uart_rd == '+') { hbstate = 1; }
0x020A	0x1683      	BSF        STATUS, 5
0x020B	0x084B      	MOVF       _uart_rd, 0
0x020C	0x3A2B      	XORLW      43
0x020D	0x1D03      	BTFSS      STATUS, 2
0x020E	0x2A12      	GOTO       L_main43
0x020F	0x3001      	MOVLW      1
0x0210	0x1283      	BCF        STATUS, 5
0x0211	0x00A1      	MOVWF      _hbstate
L_main43:
;AutoSAE_Safety.c,186 :: 		if(uart_rd == '-') { hbstate = 0; }
0x0212	0x1683      	BSF        STATUS, 5
0x0213	0x084B      	MOVF       _uart_rd, 0
0x0214	0x3A2D      	XORLW      45
0x0215	0x1D03      	BTFSS      STATUS, 2
0x0216	0x2A19      	GOTO       L_main44
0x0217	0x1283      	BCF        STATUS, 5
0x0218	0x01A1      	CLRF       _hbstate
L_main44:
;AutoSAE_Safety.c,188 :: 		if(uart_rd == 'B') { brakeil = 1; }
0x0219	0x1683      	BSF        STATUS, 5
0x021A	0x084B      	MOVF       _uart_rd, 0
0x021B	0x3A42      	XORLW      66
0x021C	0x1D03      	BTFSS      STATUS, 2
0x021D	0x2A21      	GOTO       L_main45
0x021E	0x3001      	MOVLW      1
0x021F	0x1283      	BCF        STATUS, 5
0x0220	0x00EF      	MOVWF      _brakeil
L_main45:
;AutoSAE_Safety.c,189 :: 		if(uart_rd == 'H') { brakeil = 0; }
0x0221	0x1683      	BSF        STATUS, 5
0x0222	0x084B      	MOVF       _uart_rd, 0
0x0223	0x3A48      	XORLW      72
0x0224	0x1D03      	BTFSS      STATUS, 2
0x0225	0x2A28      	GOTO       L_main46
0x0226	0x1283      	BCF        STATUS, 5
0x0227	0x01EF      	CLRF       _brakeil
L_main46:
;AutoSAE_Safety.c,191 :: 		if(uart_rd == 'A') { alarm_counter = 25; PORTA.B0 = 1; }
0x0228	0x1683      	BSF        STATUS, 5
0x0229	0x084B      	MOVF       _uart_rd, 0
0x022A	0x3A41      	XORLW      65
0x022B	0x1D03      	BTFSS      STATUS, 2
0x022C	0x2A33      	GOTO       L_main47
0x022D	0x3019      	MOVLW      25
0x022E	0x1283      	BCF        STATUS, 5
0x022F	0x00AC      	MOVWF      _alarm_counter
0x0230	0x3000      	MOVLW      0
0x0231	0x00AD      	MOVWF      _alarm_counter+1
0x0232	0x1405      	BSF        PORTA, 0
L_main47:
0x0233	0x1283      	BCF        STATUS, 5
;AutoSAE_Safety.c,193 :: 		if(oldhbstate != hbstate) { hb_interruptcount = 0; }
0x0234	0x0824      	MOVF       _oldhbstate, 0
0x0235	0x0621      	XORWF      _hbstate, 0
0x0236	0x1903      	BTFSC      STATUS, 2
0x0237	0x2A3A      	GOTO       L_main48
0x0238	0x01A2      	CLRF       _hb_interruptcount
0x0239	0x01A3      	CLRF       _hb_interruptcount+1
L_main48:
;AutoSAE_Safety.c,195 :: 		UART1_Write_Text("ACK ");        // Reply with acknowledgement of message.
0x023A	0x3027      	MOVLW      ?lstr5_AutoSAE_Safety
0x023B	0x1683      	BSF        STATUS, 5
0x023C	0x00D6      	MOVWF      FARG_UART1_Write_Text_uart_text
0x023D	0x20E7      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,196 :: 		UART1_Write(uart_rd);
0x023E	0x084B      	MOVF       _uart_rd, 0
0x023F	0x00D9      	MOVWF      FARG_UART1_Write_data_
0x0240	0x20C9      	CALL       _UART1_Write
;AutoSAE_Safety.c,197 :: 		UART1_Write_Text("\n");
0x0241	0x3025      	MOVLW      ?lstr6_AutoSAE_Safety
0x0242	0x1683      	BSF        STATUS, 5
0x0243	0x00D6      	MOVWF      FARG_UART1_Write_Text_uart_text
0x0244	0x20E7      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,198 :: 		}
L_main36:
0x0245	0x1683      	BSF        STATUS, 5
;AutoSAE_Safety.c,200 :: 		if(tripstate == 0) { // Update heartbeat LED.
0x0246	0x083A      	MOVF       _tripstate, 0
0x0247	0x3A00      	XORLW      0
0x0248	0x1D03      	BTFSS      STATUS, 2
0x0249	0x2A59      	GOTO       L_main49
;AutoSAE_Safety.c,201 :: 		PORTA.B3 = hbstate;
0x024A	0x1283      	BCF        STATUS, 5
0x024B	0x1821      	BTFSC      _hbstate, 0
0x024C	0x2A4F      	GOTO       L__main101
0x024D	0x1185      	BCF        PORTA, 3
0x024E	0x2A50      	GOTO       L__main102
L__main101:
0x024F	0x1585      	BSF        PORTA, 3
L__main102:
;AutoSAE_Safety.c,202 :: 		if(alarm_counter == 0) { PORTA.B0 = 0; } // Turn off the alarm if it shouldn't be on.
0x0250	0x3000      	MOVLW      0
0x0251	0x062D      	XORWF      _alarm_counter+1, 0
0x0252	0x1D03      	BTFSS      STATUS, 2
0x0253	0x2A56      	GOTO       L__main103
0x0254	0x3000      	MOVLW      0
0x0255	0x062C      	XORWF      _alarm_counter, 0
L__main103:
0x0256	0x1D03      	BTFSS      STATUS, 2
0x0257	0x2A59      	GOTO       L_main50
0x0258	0x1005      	BCF        PORTA, 0
L_main50:
;AutoSAE_Safety.c,203 :: 		}
L_main49:
0x0259	0x1283      	BCF        STATUS, 5
;AutoSAE_Safety.c,206 :: 		PORTB.B1 = brakeil;
0x025A	0x186F      	BTFSC      _brakeil, 0
0x025B	0x2A5E      	GOTO       L__main104
0x025C	0x1086      	BCF        PORTB, 1
0x025D	0x2A5F      	GOTO       L__main105
L__main104:
0x025E	0x1486      	BSF        PORTB, 1
L__main105:
;AutoSAE_Safety.c,210 :: 		if(arm_state > 0 && PORTA.B2 == 0 && tripstate == 0) {        // Dash e-stop
0x025F	0x3080      	MOVLW      128
0x0260	0x3A00      	XORLW      0
0x0261	0x00F0      	MOVWF      R0
0x0262	0x3080      	MOVLW      128
0x0263	0x1683      	BSF        STATUS, 5
0x0264	0x0644      	XORWF      _arm_state, 0
0x0265	0x0270      	SUBWF      R0, 0
0x0266	0x1803      	BTFSC      STATUS, 0
0x0267	0x2A74      	GOTO       L_main53
0x0268	0x1283      	BCF        STATUS, 5
0x0269	0x1905      	BTFSC      PORTA, 2
0x026A	0x2A74      	GOTO       L_main53
0x026B	0x1683      	BSF        STATUS, 5
0x026C	0x083A      	MOVF       _tripstate, 0
0x026D	0x3A00      	XORLW      0
0x026E	0x1D03      	BTFSS      STATUS, 2
0x026F	0x2A74      	GOTO       L_main53
L__main87:
;AutoSAE_Safety.c,211 :: 		UART1_Write_Text("DES\n");
0x0270	0x303D      	MOVLW      ?lstr7_AutoSAE_Safety
0x0271	0x00D6      	MOVWF      FARG_UART1_Write_Text_uart_text
0x0272	0x20E7      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,212 :: 		trip();
0x0273	0x20FE      	CALL       _trip
;AutoSAE_Safety.c,213 :: 		}
L_main53:
0x0274	0x1683      	BSF        STATUS, 5
;AutoSAE_Safety.c,215 :: 		if(arm_state == 0) {
0x0275	0x0844      	MOVF       _arm_state, 0
0x0276	0x3A00      	XORLW      0
0x0277	0x1D03      	BTFSS      STATUS, 2
0x0278	0x2AA2      	GOTO       L_main54
;AutoSAE_Safety.c,217 :: 		if(Button(&PORTB,3,20,0)) {
0x0279	0x3006      	MOVLW      PORTB
0x027A	0x00D0      	MOVWF      FARG_Button_port
0x027B	0x3003      	MOVLW      3
0x027C	0x00D1      	MOVWF      FARG_Button_pin
0x027D	0x3014      	MOVLW      20
0x027E	0x00D2      	MOVWF      FARG_Button_time_ms
0x027F	0x01D3      	CLRF       FARG_Button_active_state
0x0280	0x213C      	CALL       _Button
0x0281	0x0870      	MOVF       R0, 0
0x0282	0x1903      	BTFSC      STATUS, 2
0x0283	0x2AA1      	GOTO       L_main55
;AutoSAE_Safety.c,218 :: 		UART1_Write_Text("AR\n");
0x0284	0x30A0      	MOVLW      ?lstr8_AutoSAE_Safety
0x0285	0x00D6      	MOVWF      FARG_UART1_Write_Text_uart_text
0x0286	0x20E7      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,219 :: 		if(brakeil == 1) { PORTA.B1 = 0; }     // Activate brake interlock
0x0287	0x1283      	BCF        STATUS, 5
0x0288	0x086F      	MOVF       _brakeil, 0
0x0289	0x3A01      	XORLW      1
0x028A	0x1D03      	BTFSS      STATUS, 2
0x028B	0x2A8D      	GOTO       L_main56
0x028C	0x1085      	BCF        PORTA, 1
L_main56:
;AutoSAE_Safety.c,220 :: 		PORTB.B0 = 0;                          // Throttle LED
0x028D	0x1006      	BCF        PORTB, 0
;AutoSAE_Safety.c,221 :: 		PORTA.B4 = 0;                          // E-stop LED
0x028E	0x1205      	BCF        PORTA, 4
;AutoSAE_Safety.c,222 :: 		PORTA.B0 = 0;                          // Alarm off
0x028F	0x1005      	BCF        PORTA, 0
;AutoSAE_Safety.c,223 :: 		PORTB.B6 = 0;                          // Trip relay
0x0290	0x1306      	BCF        PORTB, 6
;AutoSAE_Safety.c,224 :: 		tripstate = 0;
0x0291	0x1683      	BSF        STATUS, 5
0x0292	0x01BA      	CLRF       _tripstate
;AutoSAE_Safety.c,225 :: 		hb_trip = 0;
0x0293	0x1283      	BCF        STATUS, 5
0x0294	0x01EE      	CLRF       _hb_trip
;AutoSAE_Safety.c,226 :: 		arm_state = 1;
0x0295	0x3001      	MOVLW      1
0x0296	0x1683      	BSF        STATUS, 5
0x0297	0x00C4      	MOVWF      _arm_state
;AutoSAE_Safety.c,227 :: 		arm_interruptcount = 0;
0x0298	0x1283      	BCF        STATUS, 5
0x0299	0x01EC      	CLRF       _arm_interruptcount
0x029A	0x01ED      	CLRF       _arm_interruptcount+1
;AutoSAE_Safety.c,228 :: 		hb_interruptcount = 0;
0x029B	0x01A2      	CLRF       _hb_interruptcount
0x029C	0x01A3      	CLRF       _hb_interruptcount+1
;AutoSAE_Safety.c,229 :: 		UART1_Write_Text("A 1\n");
0x029D	0x3067      	MOVLW      ?lstr9_AutoSAE_Safety
0x029E	0x1683      	BSF        STATUS, 5
0x029F	0x00D6      	MOVWF      FARG_UART1_Write_Text_uart_text
0x02A0	0x20E7      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,230 :: 		}
L_main55:
;AutoSAE_Safety.c,231 :: 		}
0x02A1	0x2B4C      	GOTO       L_main57
L_main54:
;AutoSAE_Safety.c,232 :: 		else if(arm_state == 1) {
0x02A2	0x0844      	MOVF       _arm_state, 0
0x02A3	0x3A01      	XORLW      1
0x02A4	0x1D03      	BTFSS      STATUS, 2
0x02A5	0x2AB0      	GOTO       L_main58
;AutoSAE_Safety.c,233 :: 		if(PORTB.B3 == 1) { arm_state = -1; UART1_Write_Text("AF 1\n"); }   // Arm button
0x02A6	0x1283      	BCF        STATUS, 5
0x02A7	0x1D86      	BTFSS      PORTB, 3
0x02A8	0x2AAF      	GOTO       L_main59
0x02A9	0x30FF      	MOVLW      255
0x02AA	0x1683      	BSF        STATUS, 5
0x02AB	0x00C4      	MOVWF      _arm_state
0x02AC	0x30A4      	MOVLW      ?lstr10_AutoSAE_Safety
0x02AD	0x00D6      	MOVWF      FARG_UART1_Write_Text_uart_text
0x02AE	0x20E7      	CALL       _UART1_Write_Text
L_main59:
;AutoSAE_Safety.c,234 :: 		}
0x02AF	0x2B4C      	GOTO       L_main60
L_main58:
0x02B0	0x1683      	BSF        STATUS, 5
;AutoSAE_Safety.c,235 :: 		else if(arm_state == 2) {
0x02B1	0x0844      	MOVF       _arm_state, 0
0x02B2	0x3A02      	XORLW      2
0x02B3	0x1D03      	BTFSS      STATUS, 2
0x02B4	0x2AD1      	GOTO       L_main61
;AutoSAE_Safety.c,236 :: 		UART1_Write_Text("A 2\n");
0x02B5	0x30B5      	MOVLW      ?lstr11_AutoSAE_Safety
0x02B6	0x00D6      	MOVWF      FARG_UART1_Write_Text_uart_text
0x02B7	0x20E7      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,237 :: 		PORTB.B6 = 1;
0x02B8	0x1283      	BCF        STATUS, 5
0x02B9	0x1706      	BSF        PORTB, 6
;AutoSAE_Safety.c,238 :: 		Delay_ms(200);      // Wait for relay to pull in and power to stabilise.
0x02BA	0x3003      	MOVLW      3
0x02BB	0x00FB      	MOVWF      R11
0x02BC	0x3008      	MOVLW      8
0x02BD	0x00FC      	MOVWF      R12
0x02BE	0x3077      	MOVLW      119
0x02BF	0x00FD      	MOVWF      R13
L_main62:
0x02C0	0x0BFD      	DECFSZ     R13, 1
0x02C1	0x2AC0      	GOTO       L_main62
0x02C2	0x0BFC      	DECFSZ     R12, 1
0x02C3	0x2AC0      	GOTO       L_main62
0x02C4	0x0BFB      	DECFSZ     R11, 1
0x02C5	0x2AC0      	GOTO       L_main62
;AutoSAE_Safety.c,239 :: 		arm_state = 3;
0x02C6	0x3003      	MOVLW      3
0x02C7	0x1683      	BSF        STATUS, 5
0x02C8	0x00C4      	MOVWF      _arm_state
;AutoSAE_Safety.c,240 :: 		arm_interruptcount = 0;
0x02C9	0x1283      	BCF        STATUS, 5
0x02CA	0x01EC      	CLRF       _arm_interruptcount
0x02CB	0x01ED      	CLRF       _arm_interruptcount+1
;AutoSAE_Safety.c,241 :: 		UART1_Write_Text("A 3\n");
0x02CC	0x30B0      	MOVLW      ?lstr12_AutoSAE_Safety
0x02CD	0x1683      	BSF        STATUS, 5
0x02CE	0x00D6      	MOVWF      FARG_UART1_Write_Text_uart_text
0x02CF	0x20E7      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,242 :: 		}
0x02D0	0x2B4C      	GOTO       L_main63
L_main61:
;AutoSAE_Safety.c,243 :: 		else if(arm_state == 3) {
0x02D1	0x0844      	MOVF       _arm_state, 0
0x02D2	0x3A03      	XORLW      3
0x02D3	0x1D03      	BTFSS      STATUS, 2
0x02D4	0x2AF3      	GOTO       L_main64
;AutoSAE_Safety.c,244 :: 		if(PORTB.B3 == 1) { arm_state = -1; UART1_Write_Text("AF 1\n"); }   // Arm button
0x02D5	0x1283      	BCF        STATUS, 5
0x02D6	0x1D86      	BTFSS      PORTB, 3
0x02D7	0x2ADE      	GOTO       L_main65
0x02D8	0x30FF      	MOVLW      255
0x02D9	0x1683      	BSF        STATUS, 5
0x02DA	0x00C4      	MOVWF      _arm_state
0x02DB	0x30AA      	MOVLW      ?lstr13_AutoSAE_Safety
0x02DC	0x00D6      	MOVWF      FARG_UART1_Write_Text_uart_text
0x02DD	0x20E7      	CALL       _UART1_Write_Text
L_main65:
0x02DE	0x1683      	BSF        STATUS, 5
;AutoSAE_Safety.c,245 :: 		if(Button(&PORTB,4,1,0)) { arm_state = -1; PORTB.B0 = 1; UART1_Write_Text("AF 2\n"); }  // Throttle
0x02DF	0x3006      	MOVLW      PORTB
0x02E0	0x00D0      	MOVWF      FARG_Button_port
0x02E1	0x3004      	MOVLW      4
0x02E2	0x00D1      	MOVWF      FARG_Button_pin
0x02E3	0x3001      	MOVLW      1
0x02E4	0x00D2      	MOVWF      FARG_Button_time_ms
0x02E5	0x01D3      	CLRF       FARG_Button_active_state
0x02E6	0x213C      	CALL       _Button
0x02E7	0x0870      	MOVF       R0, 0
0x02E8	0x1903      	BTFSC      STATUS, 2
0x02E9	0x2AF2      	GOTO       L_main66
0x02EA	0x30FF      	MOVLW      255
0x02EB	0x00C4      	MOVWF      _arm_state
0x02EC	0x1283      	BCF        STATUS, 5
0x02ED	0x1406      	BSF        PORTB, 0
0x02EE	0x304C      	MOVLW      ?lstr14_AutoSAE_Safety
0x02EF	0x1683      	BSF        STATUS, 5
0x02F0	0x00D6      	MOVWF      FARG_UART1_Write_Text_uart_text
0x02F1	0x20E7      	CALL       _UART1_Write_Text
L_main66:
;AutoSAE_Safety.c,246 :: 		}
0x02F2	0x2B4C      	GOTO       L_main67
L_main64:
;AutoSAE_Safety.c,247 :: 		else if(arm_state == 4) {
0x02F3	0x0844      	MOVF       _arm_state, 0
0x02F4	0x3A04      	XORLW      4
0x02F5	0x1D03      	BTFSS      STATUS, 2
0x02F6	0x2B04      	GOTO       L_main68
;AutoSAE_Safety.c,248 :: 		UART1_Write_Text("A 4\n");
0x02F7	0x3047      	MOVLW      ?lstr15_AutoSAE_Safety
0x02F8	0x00D6      	MOVWF      FARG_UART1_Write_Text_uart_text
0x02F9	0x20E7      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,249 :: 		arm_interruptcount = 0;
0x02FA	0x1283      	BCF        STATUS, 5
0x02FB	0x01EC      	CLRF       _arm_interruptcount
0x02FC	0x01ED      	CLRF       _arm_interruptcount+1
;AutoSAE_Safety.c,250 :: 		arm_state = 5;
0x02FD	0x3005      	MOVLW      5
0x02FE	0x1683      	BSF        STATUS, 5
0x02FF	0x00C4      	MOVWF      _arm_state
;AutoSAE_Safety.c,251 :: 		UART1_Write_Text("A 5\n");
0x0300	0x3042      	MOVLW      ?lstr16_AutoSAE_Safety
0x0301	0x00D6      	MOVWF      FARG_UART1_Write_Text_uart_text
0x0302	0x20E7      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,252 :: 		}
0x0303	0x2B4C      	GOTO       L_main69
L_main68:
;AutoSAE_Safety.c,253 :: 		else if(arm_state == 5 || arm_state == 7) {
0x0304	0x0844      	MOVF       _arm_state, 0
0x0305	0x3A05      	XORLW      5
0x0306	0x1903      	BTFSC      STATUS, 2
0x0307	0x2B0D      	GOTO       L__main86
0x0308	0x0844      	MOVF       _arm_state, 0
0x0309	0x3A07      	XORLW      7
0x030A	0x1903      	BTFSC      STATUS, 2
0x030B	0x2B0D      	GOTO       L__main86
0x030C	0x2B21      	GOTO       L_main72
L__main86:
;AutoSAE_Safety.c,254 :: 		if(Button(&PORTB,4,1,0)) { arm_state = -1; PORTB.B0 = 1; UART1_Write_Text("AF 3\n"); }      // Throttle
0x030D	0x3006      	MOVLW      PORTB
0x030E	0x00D0      	MOVWF      FARG_Button_port
0x030F	0x3004      	MOVLW      4
0x0310	0x00D1      	MOVWF      FARG_Button_pin
0x0311	0x3001      	MOVLW      1
0x0312	0x00D2      	MOVWF      FARG_Button_time_ms
0x0313	0x01D3      	CLRF       FARG_Button_active_state
0x0314	0x213C      	CALL       _Button
0x0315	0x0870      	MOVF       R0, 0
0x0316	0x1903      	BTFSC      STATUS, 2
0x0317	0x2B20      	GOTO       L_main73
0x0318	0x30FF      	MOVLW      255
0x0319	0x00C4      	MOVWF      _arm_state
0x031A	0x1283      	BCF        STATUS, 5
0x031B	0x1406      	BSF        PORTB, 0
0x031C	0x3052      	MOVLW      ?lstr17_AutoSAE_Safety
0x031D	0x1683      	BSF        STATUS, 5
0x031E	0x00D6      	MOVWF      FARG_UART1_Write_Text_uart_text
0x031F	0x20E7      	CALL       _UART1_Write_Text
L_main73:
;AutoSAE_Safety.c,255 :: 		}
0x0320	0x2B4C      	GOTO       L_main74
L_main72:
;AutoSAE_Safety.c,256 :: 		else if(arm_state == 6 && PORTB.B3 == 1) {
0x0321	0x0844      	MOVF       _arm_state, 0
0x0322	0x3A06      	XORLW      6
0x0323	0x1D03      	BTFSS      STATUS, 2
0x0324	0x2B37      	GOTO       L_main77
0x0325	0x1283      	BCF        STATUS, 5
0x0326	0x1D86      	BTFSS      PORTB, 3
0x0327	0x2B37      	GOTO       L_main77
L__main85:
;AutoSAE_Safety.c,257 :: 		UART1_Write_Text("A 6\n");
0x0328	0x3062      	MOVLW      ?lstr18_AutoSAE_Safety
0x0329	0x1683      	BSF        STATUS, 5
0x032A	0x00D6      	MOVWF      FARG_UART1_Write_Text_uart_text
0x032B	0x20E7      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,258 :: 		PORTA.B1 = 1;              // Brake IL off
0x032C	0x1283      	BCF        STATUS, 5
0x032D	0x1485      	BSF        PORTA, 1
;AutoSAE_Safety.c,259 :: 		arm_interruptcount = 0;
0x032E	0x01EC      	CLRF       _arm_interruptcount
0x032F	0x01ED      	CLRF       _arm_interruptcount+1
;AutoSAE_Safety.c,260 :: 		arm_state = 7;
0x0330	0x3007      	MOVLW      7
0x0331	0x1683      	BSF        STATUS, 5
0x0332	0x00C4      	MOVWF      _arm_state
;AutoSAE_Safety.c,261 :: 		UART1_Write_Text("A 7\n");
0x0333	0x305D      	MOVLW      ?lstr19_AutoSAE_Safety
0x0334	0x00D6      	MOVWF      FARG_UART1_Write_Text_uart_text
0x0335	0x20E7      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,262 :: 		}
0x0336	0x2B4C      	GOTO       L_main78
L_main77:
0x0337	0x1683      	BSF        STATUS, 5
;AutoSAE_Safety.c,263 :: 		else if(arm_state == 8) {
0x0338	0x0844      	MOVF       _arm_state, 0
0x0339	0x3A08      	XORLW      8
0x033A	0x1D03      	BTFSS      STATUS, 2
0x033B	0x2B42      	GOTO       L_main79
;AutoSAE_Safety.c,264 :: 		UART1_Write_Text("A 9\n");
0x033C	0x3058      	MOVLW      ?lstr20_AutoSAE_Safety
0x033D	0x00D6      	MOVWF      FARG_UART1_Write_Text_uart_text
0x033E	0x20E7      	CALL       _UART1_Write_Text
;AutoSAE_Safety.c,265 :: 		arm_state = 9;
0x033F	0x3009      	MOVLW      9
0x0340	0x00C4      	MOVWF      _arm_state
;AutoSAE_Safety.c,266 :: 		}
0x0341	0x2B4C      	GOTO       L_main80
L_main79:
;AutoSAE_Safety.c,267 :: 		else if(arm_state == -1) {
0x0342	0x0844      	MOVF       _arm_state, 0
0x0343	0x3AFF      	XORLW      255
0x0344	0x1D03      	BTFSS      STATUS, 2
0x0345	0x2B4C      	GOTO       L_main81
;AutoSAE_Safety.c,268 :: 		PORTB.B6 = 0;
0x0346	0x1283      	BCF        STATUS, 5
0x0347	0x1306      	BCF        PORTB, 6
;AutoSAE_Safety.c,269 :: 		if(PORTB.B3 == 1) { arm_state = 0; }
0x0348	0x1D86      	BTFSS      PORTB, 3
0x0349	0x2B4C      	GOTO       L_main82
0x034A	0x1683      	BSF        STATUS, 5
0x034B	0x01C4      	CLRF       _arm_state
L_main82:
;AutoSAE_Safety.c,270 :: 		}
L_main81:
L_main80:
L_main78:
L_main74:
L_main69:
L_main67:
L_main63:
L_main60:
L_main57:
;AutoSAE_Safety.c,272 :: 		}
0x034C	0x29D1      	GOTO       L_main30
;AutoSAE_Safety.c,274 :: 		}
L_end_main:
0x034D	0x2B4D      	GOTO       $+0
; end of _main
0x03CE	0x3021      	MOVLW      33
0x03CF	0x0084      	MOVWF      FSR
0x03D0	0x304D      	MOVLW      77
0x03D1	0x1283      	BCF        STATUS, 5
0x03D2	0x1303      	BCF        STATUS, 6
0x03D3	0x00F0      	MOVWF      R0
0x03D4	0x3053      	MOVLW      83
0x03D5	0x1683      	BSF        STATUS, 5
0x03D6	0x00CC      	MOVWF      ___DoICPAddr
0x03D7	0x3003      	MOVLW      3
0x03D8	0x00CD      	MOVWF      205
0x03D9	0x2130      	CALL       304
0x03DA	0x30A0      	MOVLW      160
0x03DB	0x0084      	MOVWF      FSR
0x03DC	0x301A      	MOVLW      26
0x03DD	0x00F0      	MOVWF      R0
0x03DE	0x30A0      	MOVLW      160
0x03DF	0x1683      	BSF        STATUS, 5
0x03E0	0x00CC      	MOVWF      ___DoICPAddr
0x03E1	0x3003      	MOVLW      3
0x03E2	0x00CD      	MOVWF      205
0x03E3	0x2130      	CALL       304
0x03E4	0x306E      	MOVLW      110
0x03E5	0x0084      	MOVWF      FSR
0x03E6	0x3002      	MOVLW      2
0x03E7	0x00F0      	MOVWF      R0
0x03E8	0x30CB      	MOVLW      203
0x03E9	0x1683      	BSF        STATUS, 5
0x03EA	0x00CC      	MOVWF      ___DoICPAddr
0x03EB	0x3003      	MOVLW      3
0x03EC	0x00CD      	MOVWF      205
0x03ED	0x2130      	CALL       304
0x03EE	0x30BA      	MOVLW      186
0x03EF	0x0084      	MOVWF      FSR
0x03F0	0x3011      	MOVLW      17
0x03F1	0x00F0      	MOVWF      R0
0x03F2	0x30BA      	MOVLW      186
0x03F3	0x1683      	BSF        STATUS, 5
0x03F4	0x00CC      	MOVWF      ___DoICPAddr
0x03F5	0x3003      	MOVLW      3
0x03F6	0x00CD      	MOVWF      205
0x03F7	0x2130      	CALL       304
0x03F8	0x0008      	RETURN
;AutoSAE_Safety.c,0 :: ?ICS_hbstate
0x0353	0x3400 ;?ICS_hbstate+0
; end of ?ICS_hbstate
;AutoSAE_Safety.c,0 :: ?ICS_hb_interruptcount
0x0354	0x3400 ;?ICS_hb_interruptcount+0
0x0355	0x3400 ;?ICS_hb_interruptcount+1
; end of ?ICS_hb_interruptcount
;AutoSAE_Safety.c,0 :: ?ICS_oldhbstate
0x0356	0x3400 ;?ICS_oldhbstate+0
; end of ?ICS_oldhbstate
;AutoSAE_Safety.c,0 :: ?ICS?lstr6_AutoSAE_Safety
0x0357	0x340A ;?ICS?lstr6_AutoSAE_Safety+0
0x0358	0x3400 ;?ICS?lstr6_AutoSAE_Safety+1
; end of ?ICS?lstr6_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr5_AutoSAE_Safety
0x0359	0x3441 ;?ICS?lstr5_AutoSAE_Safety+0
0x035A	0x3443 ;?ICS?lstr5_AutoSAE_Safety+1
0x035B	0x344B ;?ICS?lstr5_AutoSAE_Safety+2
0x035C	0x3420 ;?ICS?lstr5_AutoSAE_Safety+3
0x035D	0x3400 ;?ICS?lstr5_AutoSAE_Safety+4
; end of ?ICS?lstr5_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS_alarm_counter
0x035E	0x3400 ;?ICS_alarm_counter+0
0x035F	0x3400 ;?ICS_alarm_counter+1
; end of ?ICS_alarm_counter
;AutoSAE_Safety.c,0 :: ?ICS?lstr3_AutoSAE_Safety
0x0360	0x3448 ;?ICS?lstr3_AutoSAE_Safety+0
0x0361	0x3469 ;?ICS?lstr3_AutoSAE_Safety+1
0x0362	0x340A ;?ICS?lstr3_AutoSAE_Safety+2
0x0363	0x3400 ;?ICS?lstr3_AutoSAE_Safety+3
; end of ?ICS?lstr3_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS_hb_bypass_prev_state
0x0364	0x3400 ;?ICS_hb_bypass_prev_state+0
; end of ?ICS_hb_bypass_prev_state
;AutoSAE_Safety.c,0 :: ?ICS_hb_bypass_button_state
0x0365	0x3400 ;?ICS_hb_bypass_button_state+0
; end of ?ICS_hb_bypass_button_state
;AutoSAE_Safety.c,0 :: ?ICS?lstr4_AutoSAE_Safety
0x0366	0x3449 ;?ICS?lstr4_AutoSAE_Safety+0
0x0367	0x346E ;?ICS?lstr4_AutoSAE_Safety+1
0x0368	0x3469 ;?ICS?lstr4_AutoSAE_Safety+2
0x0369	0x3474 ;?ICS?lstr4_AutoSAE_Safety+3
0x036A	0x3420 ;?ICS?lstr4_AutoSAE_Safety+4
0x036B	0x346F ;?ICS?lstr4_AutoSAE_Safety+5
0x036C	0x346B ;?ICS?lstr4_AutoSAE_Safety+6
0x036D	0x340A ;?ICS?lstr4_AutoSAE_Safety+7
0x036E	0x3400 ;?ICS?lstr4_AutoSAE_Safety+8
; end of ?ICS?lstr4_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr7_AutoSAE_Safety
0x036F	0x3444 ;?ICS?lstr7_AutoSAE_Safety+0
0x0370	0x3445 ;?ICS?lstr7_AutoSAE_Safety+1
0x0371	0x3453 ;?ICS?lstr7_AutoSAE_Safety+2
0x0372	0x340A ;?ICS?lstr7_AutoSAE_Safety+3
0x0373	0x3400 ;?ICS?lstr7_AutoSAE_Safety+4
; end of ?ICS?lstr7_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr16_AutoSAE_Safety
0x0374	0x3441 ;?ICS?lstr16_AutoSAE_Safety+0
0x0375	0x3420 ;?ICS?lstr16_AutoSAE_Safety+1
0x0376	0x3435 ;?ICS?lstr16_AutoSAE_Safety+2
0x0377	0x340A ;?ICS?lstr16_AutoSAE_Safety+3
0x0378	0x3400 ;?ICS?lstr16_AutoSAE_Safety+4
; end of ?ICS?lstr16_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr15_AutoSAE_Safety
0x0379	0x3441 ;?ICS?lstr15_AutoSAE_Safety+0
0x037A	0x3420 ;?ICS?lstr15_AutoSAE_Safety+1
0x037B	0x3434 ;?ICS?lstr15_AutoSAE_Safety+2
0x037C	0x340A ;?ICS?lstr15_AutoSAE_Safety+3
0x037D	0x3400 ;?ICS?lstr15_AutoSAE_Safety+4
; end of ?ICS?lstr15_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr14_AutoSAE_Safety
0x037E	0x3441 ;?ICS?lstr14_AutoSAE_Safety+0
0x037F	0x3446 ;?ICS?lstr14_AutoSAE_Safety+1
0x0380	0x3420 ;?ICS?lstr14_AutoSAE_Safety+2
0x0381	0x3432 ;?ICS?lstr14_AutoSAE_Safety+3
0x0382	0x340A ;?ICS?lstr14_AutoSAE_Safety+4
0x0383	0x3400 ;?ICS?lstr14_AutoSAE_Safety+5
; end of ?ICS?lstr14_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr17_AutoSAE_Safety
0x0384	0x3441 ;?ICS?lstr17_AutoSAE_Safety+0
0x0385	0x3446 ;?ICS?lstr17_AutoSAE_Safety+1
0x0386	0x3420 ;?ICS?lstr17_AutoSAE_Safety+2
0x0387	0x3433 ;?ICS?lstr17_AutoSAE_Safety+3
0x0388	0x340A ;?ICS?lstr17_AutoSAE_Safety+4
0x0389	0x3400 ;?ICS?lstr17_AutoSAE_Safety+5
; end of ?ICS?lstr17_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr20_AutoSAE_Safety
0x038A	0x3441 ;?ICS?lstr20_AutoSAE_Safety+0
0x038B	0x3420 ;?ICS?lstr20_AutoSAE_Safety+1
0x038C	0x3439 ;?ICS?lstr20_AutoSAE_Safety+2
0x038D	0x340A ;?ICS?lstr20_AutoSAE_Safety+3
0x038E	0x3400 ;?ICS?lstr20_AutoSAE_Safety+4
; end of ?ICS?lstr20_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr19_AutoSAE_Safety
0x038F	0x3441 ;?ICS?lstr19_AutoSAE_Safety+0
0x0390	0x3420 ;?ICS?lstr19_AutoSAE_Safety+1
0x0391	0x3437 ;?ICS?lstr19_AutoSAE_Safety+2
0x0392	0x340A ;?ICS?lstr19_AutoSAE_Safety+3
0x0393	0x3400 ;?ICS?lstr19_AutoSAE_Safety+4
; end of ?ICS?lstr19_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr18_AutoSAE_Safety
0x0394	0x3441 ;?ICS?lstr18_AutoSAE_Safety+0
0x0395	0x3420 ;?ICS?lstr18_AutoSAE_Safety+1
0x0396	0x3436 ;?ICS?lstr18_AutoSAE_Safety+2
0x0397	0x340A ;?ICS?lstr18_AutoSAE_Safety+3
0x0398	0x3400 ;?ICS?lstr18_AutoSAE_Safety+4
; end of ?ICS?lstr18_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr9_AutoSAE_Safety
0x0399	0x3441 ;?ICS?lstr9_AutoSAE_Safety+0
0x039A	0x3420 ;?ICS?lstr9_AutoSAE_Safety+1
0x039B	0x3431 ;?ICS?lstr9_AutoSAE_Safety+2
0x039C	0x340A ;?ICS?lstr9_AutoSAE_Safety+3
0x039D	0x3400 ;?ICS?lstr9_AutoSAE_Safety+4
; end of ?ICS?lstr9_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS_arm_interruptcount
0x039E	0x3400 ;?ICS_arm_interruptcount+0
0x039F	0x3400 ;?ICS_arm_interruptcount+1
; end of ?ICS_arm_interruptcount
;AutoSAE_Safety.c,0 :: ?ICS?lstr8_AutoSAE_Safety
0x03A0	0x3441 ;?ICS?lstr8_AutoSAE_Safety+0
0x03A1	0x3452 ;?ICS?lstr8_AutoSAE_Safety+1
0x03A2	0x340A ;?ICS?lstr8_AutoSAE_Safety+2
0x03A3	0x3400 ;?ICS?lstr8_AutoSAE_Safety+3
; end of ?ICS?lstr8_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr10_AutoSAE_Safety
0x03A4	0x3441 ;?ICS?lstr10_AutoSAE_Safety+0
0x03A5	0x3446 ;?ICS?lstr10_AutoSAE_Safety+1
0x03A6	0x3420 ;?ICS?lstr10_AutoSAE_Safety+2
0x03A7	0x3431 ;?ICS?lstr10_AutoSAE_Safety+3
0x03A8	0x340A ;?ICS?lstr10_AutoSAE_Safety+4
0x03A9	0x3400 ;?ICS?lstr10_AutoSAE_Safety+5
; end of ?ICS?lstr10_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr13_AutoSAE_Safety
0x03AA	0x3441 ;?ICS?lstr13_AutoSAE_Safety+0
0x03AB	0x3446 ;?ICS?lstr13_AutoSAE_Safety+1
0x03AC	0x3420 ;?ICS?lstr13_AutoSAE_Safety+2
0x03AD	0x3431 ;?ICS?lstr13_AutoSAE_Safety+3
0x03AE	0x340A ;?ICS?lstr13_AutoSAE_Safety+4
0x03AF	0x3400 ;?ICS?lstr13_AutoSAE_Safety+5
; end of ?ICS?lstr13_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr12_AutoSAE_Safety
0x03B0	0x3441 ;?ICS?lstr12_AutoSAE_Safety+0
0x03B1	0x3420 ;?ICS?lstr12_AutoSAE_Safety+1
0x03B2	0x3433 ;?ICS?lstr12_AutoSAE_Safety+2
0x03B3	0x340A ;?ICS?lstr12_AutoSAE_Safety+3
0x03B4	0x3400 ;?ICS?lstr12_AutoSAE_Safety+4
; end of ?ICS?lstr12_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS?lstr11_AutoSAE_Safety
0x03B5	0x3441 ;?ICS?lstr11_AutoSAE_Safety+0
0x03B6	0x3420 ;?ICS?lstr11_AutoSAE_Safety+1
0x03B7	0x3432 ;?ICS?lstr11_AutoSAE_Safety+2
0x03B8	0x340A ;?ICS?lstr11_AutoSAE_Safety+3
0x03B9	0x3400 ;?ICS?lstr11_AutoSAE_Safety+4
; end of ?ICS?lstr11_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS_tripstate
0x03BA	0x3400 ;?ICS_tripstate+0
; end of ?ICS_tripstate
;AutoSAE_Safety.c,0 :: ?ICS?lstr2_AutoSAE_Safety
0x03BB	0x3455 ;?ICS?lstr2_AutoSAE_Safety+0
0x03BC	0x346E ;?ICS?lstr2_AutoSAE_Safety+1
0x03BD	0x3474 ;?ICS?lstr2_AutoSAE_Safety+2
0x03BE	0x3472 ;?ICS?lstr2_AutoSAE_Safety+3
0x03BF	0x3469 ;?ICS?lstr2_AutoSAE_Safety+4
0x03C0	0x3470 ;?ICS?lstr2_AutoSAE_Safety+5
0x03C1	0x340A ;?ICS?lstr2_AutoSAE_Safety+6
0x03C2	0x3400 ;?ICS?lstr2_AutoSAE_Safety+7
; end of ?ICS?lstr2_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS_tripreq
0x03C3	0x3400 ;?ICS_tripreq+0
; end of ?ICS_tripreq
;AutoSAE_Safety.c,0 :: ?ICS_arm_state
0x03C4	0x3400 ;?ICS_arm_state+0
; end of ?ICS_arm_state
;AutoSAE_Safety.c,0 :: ?ICS?lstr1_AutoSAE_Safety
0x03C5	0x3454 ;?ICS?lstr1_AutoSAE_Safety+0
0x03C6	0x3452 ;?ICS?lstr1_AutoSAE_Safety+1
0x03C7	0x3449 ;?ICS?lstr1_AutoSAE_Safety+2
0x03C8	0x3450 ;?ICS?lstr1_AutoSAE_Safety+3
0x03C9	0x340A ;?ICS?lstr1_AutoSAE_Safety+4
0x03CA	0x3400 ;?ICS?lstr1_AutoSAE_Safety+5
; end of ?ICS?lstr1_AutoSAE_Safety
;AutoSAE_Safety.c,0 :: ?ICS_hb_trip
0x03CB	0x3400 ;?ICS_hb_trip+0
; end of ?ICS_hb_trip
;AutoSAE_Safety.c,0 :: ?ICS_brakeil
0x03CC	0x3401 ;?ICS_brakeil+0
; end of ?ICS_brakeil
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004     [197]    _interrupt
0x00C9      [10]    _UART1_Write
0x00D3      [13]    _Delay_500us
0x00E0       [7]    _____DoICP
0x00E7      [23]    _UART1_Write_Text
0x00FE      [28]    _trip
0x011A      [15]    _untrip
0x0129       [7]    _UART1_Data_Ready
0x0130      [12]    ___CC2DW
0x013C      [58]    _Button
0x0176      [11]    _UART1_Read
0x0181      [16]    _UART1_Init
0x0191     [444]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x0018       [1]    RCSTA
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x0021       [1]    _hbstate
0x0022       [2]    _hb_interruptcount
0x0024       [1]    _oldhbstate
0x0025       [2]    ?lstr6_AutoSAE_Safety
0x0027       [5]    ?lstr5_AutoSAE_Safety
0x002C       [2]    _alarm_counter
0x002E       [4]    ?lstr3_AutoSAE_Safety
0x0032       [1]    _hb_bypass_prev_state
0x0033       [1]    _hb_bypass_button_state
0x0034       [9]    ?lstr4_AutoSAE_Safety
0x003D       [5]    ?lstr7_AutoSAE_Safety
0x0042       [5]    ?lstr16_AutoSAE_Safety
0x0047       [5]    ?lstr15_AutoSAE_Safety
0x004C       [6]    ?lstr14_AutoSAE_Safety
0x0052       [6]    ?lstr17_AutoSAE_Safety
0x0058       [5]    ?lstr20_AutoSAE_Safety
0x005D       [5]    ?lstr19_AutoSAE_Safety
0x0062       [5]    ?lstr18_AutoSAE_Safety
0x0067       [5]    ?lstr9_AutoSAE_Safety
0x006C       [2]    _arm_interruptcount
0x006E       [1]    _hb_trip
0x006F       [1]    _brakeil
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISA
0x0086       [0]    TRISB2_bit
0x0086       [1]    TRISB
0x0086       [0]    TRISB5_bit
0x008F       [1]    OSCCON
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
0x009B       [1]    ANSEL
0x009C       [1]    CMCON
0x00A0       [4]    ?lstr8_AutoSAE_Safety
0x00A4       [6]    ?lstr10_AutoSAE_Safety
0x00AA       [6]    ?lstr13_AutoSAE_Safety
0x00B0       [5]    ?lstr12_AutoSAE_Safety
0x00B5       [5]    ?lstr11_AutoSAE_Safety
0x00BA       [1]    _tripstate
0x00BB       [8]    ?lstr2_AutoSAE_Safety
0x00C3       [1]    _tripreq
0x00C4       [1]    _arm_state
0x00C5       [6]    ?lstr1_AutoSAE_Safety
0x00CB       [1]    _uart_rd
0x00CC       [2]    ___DoICPAddr
0x00CE       [1]    ___savePCLATH
0x00CF       [1]    ___saveSTATUS
0x00D0       [1]    FARG_Button_port
0x00D1       [1]    FARG_Button_pin
0x00D2       [1]    FARG_Button_time_ms
0x00D3       [1]    FARG_Button_active_state
0x00D4       [1]    Button_pMask_L0
0x00D5       [1]    Button_rslt_L0
0x00D6       [1]    FARG_UART1_Write_Text_uart_text
0x00D7       [1]    UART1_Write_Text_data__L0
0x00D8       [1]    UART1_Write_Text_counter_L0
0x00D9       [1]    FARG_UART1_Write_data_
0x0105       [1]    WDTCON
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0353       [1]    ?ICS_hbstate
0x0354       [2]    ?ICS_hb_interruptcount
0x0356       [1]    ?ICS_oldhbstate
0x0357       [2]    ?ICS?lstr6_AutoSAE_Safety
0x0359       [5]    ?ICS?lstr5_AutoSAE_Safety
0x035E       [2]    ?ICS_alarm_counter
0x0360       [4]    ?ICS?lstr3_AutoSAE_Safety
0x0364       [1]    ?ICS_hb_bypass_prev_state
0x0365       [1]    ?ICS_hb_bypass_button_state
0x0366       [9]    ?ICS?lstr4_AutoSAE_Safety
0x036F       [5]    ?ICS?lstr7_AutoSAE_Safety
0x0374       [5]    ?ICS?lstr16_AutoSAE_Safety
0x0379       [5]    ?ICS?lstr15_AutoSAE_Safety
0x037E       [6]    ?ICS?lstr14_AutoSAE_Safety
0x0384       [6]    ?ICS?lstr17_AutoSAE_Safety
0x038A       [5]    ?ICS?lstr20_AutoSAE_Safety
0x038F       [5]    ?ICS?lstr19_AutoSAE_Safety
0x0394       [5]    ?ICS?lstr18_AutoSAE_Safety
0x0399       [5]    ?ICS?lstr9_AutoSAE_Safety
0x039E       [2]    ?ICS_arm_interruptcount
0x03A0       [4]    ?ICS?lstr8_AutoSAE_Safety
0x03A4       [6]    ?ICS?lstr10_AutoSAE_Safety
0x03AA       [6]    ?ICS?lstr13_AutoSAE_Safety
0x03B0       [5]    ?ICS?lstr12_AutoSAE_Safety
0x03B5       [5]    ?ICS?lstr11_AutoSAE_Safety
0x03BA       [1]    ?ICS_tripstate
0x03BB       [8]    ?ICS?lstr2_AutoSAE_Safety
0x03C3       [1]    ?ICS_tripreq
0x03C4       [1]    ?ICS_arm_state
0x03C5       [6]    ?ICS?lstr1_AutoSAE_Safety
0x03CB       [1]    ?ICS_hb_trip
0x03CC       [1]    ?ICS_brakeil
//** Label List: ** 
//----------------------------------------------
  L_trip0
  L_trip1
  L_trip2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L_interrupt9
  L_interrupt10
  L_interrupt11
  L_interrupt12
  L_interrupt13
  L_interrupt14
  L_interrupt15
  L_interrupt16
  L_interrupt17
  L_interrupt18
  L_interrupt19
  L_interrupt20
  L_interrupt21
  L_interrupt22
  L_interrupt23
  L_interrupt24
  L_interrupt25
  L_interrupt26
  L_interrupt27
  L_interrupt28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  L_main59
  L_main60
  L_main61
  L_main62
  L_main63
  L_main64
  L_main65
  L_main66
  L_main67
  L_main68
  L_main69
  L_main70
  L_main71
  L_main72
  L_main73
  L_main74
  L_main75
  L_main76
  L_main77
  L_main78
  L_main79
  L_main80
  L_main81
  L_main82
  L__interrupt83
  L__interrupt84
  L__main85
  L__main86
  L__main87
  L__main88
  L__main89
  L_end_trip
  _trip
  L_end_untrip
  _untrip
  L_end_interrupt
  _interrupt
  L__interrupt93
  L__interrupt94
  L__interrupt95
  L__interrupt96
  L__interrupt97
  L__interrupt98
  L__interrupt99
  L_end_main
  _main
  L__main101
  L__main102
  L__main103
  L__main104
  L__main105
  L_Button0
  L_Button1
  L_Button2
  L_Button3
  L_end_Button
  _Button
  L__Button5
  L__Button6
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_1ms6
  L_Delay_5ms7
  L_Delay_8ms8
  L_Delay_10ms9
  L_Delay_100ms10
  L_Delay_1sec11
  L_boot16_Delay_5ms12
  L_Delay_Cyc13
  L_Delay_Cyc14
  L_VDelay_ms15
  L_VDelay_ms16
  L_VDelay_ms17
  L_VDelay_Advanced_ms18
  L_VDelay_Advanced_ms19
  L_VDelay_Advanced_ms20
  L_end_Get_Fosc_kHz
  _Get_Fosc_kHz
  L_end_Delay_1us
  _Delay_1us
  L_end_Delay_10us
  _Delay_10us
  L_end_Delay_22us
  _Delay_22us
  L_end_Delay_50us
  _Delay_50us
  L_end_Delay_80us
  _Delay_80us
  L_end_Delay_500us
  _Delay_500us
  L_end_Delay_5500us
  _Delay_5500us
  L_end_Delay_1ms
  _Delay_1ms
  L_end_Delay_5ms
  _Delay_5ms
  L_end_Delay_8ms
  _Delay_8ms
  L_end_Delay_10ms
  _Delay_10ms
  L_end_Delay_100ms
  _Delay_100ms
  L_end_Delay_1sec
  _Delay_1sec
  L_end_boot16_Delay_5ms
  _boot16_Delay_5ms
  L_end_Delay_Cyc
  _Delay_Cyc
  L_end_VDelay_ms
  _VDelay_ms
  L__VDelay_ms38
  L__VDelay_ms39
  L__VDelay_ms40
  L_end_VDelay_Advanced_ms
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms42
  L__VDelay_Advanced_ms43
  L__VDelay_Advanced_ms44
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_trip0
  L_trip1
  L_trip2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L_interrupt9
  L_interrupt10
  L_interrupt11
  L_interrupt12
  L_interrupt13
  L_interrupt14
  L_interrupt15
  L_interrupt16
  L_interrupt17
  L_interrupt18
  L_interrupt19
  L_interrupt20
  L_interrupt21
  L_interrupt22
  L_interrupt23
  L_interrupt24
  L_interrupt25
  L_interrupt26
  L_interrupt27
  L_interrupt28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  L_main59
  L_main60
  L_main61
  L_main62
  L_main63
  L_main64
  L_main65
  L_main66
  L_main67
  L_main68
  L_main69
  L_main70
  L_main71
  L_main72
  L_main73
  L_main74
  L_main75
  L_main76
  L_main77
  L_main78
  L_main79
  L_main80
  L_main81
  L_main82
  L__interrupt83
  L__interrupt84
  L__main85
  L__main86
  L__main87
  L__main88
  L__main89
  L_end_trip
  _trip
  L_end_untrip
  _untrip
  L_end_interrupt
  _interrupt
  L__interrupt93
  L__interrupt94
  L__interrupt95
  L__interrupt96
  L__interrupt97
  L__interrupt98
  L__interrupt99
  L_end_main
  _main
  L__main101
  L__main102
  L__main103
  L__main104
  L__main105
